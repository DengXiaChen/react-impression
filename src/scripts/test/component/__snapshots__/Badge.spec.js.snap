// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Badge ui 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <span
    className="badge badge-legend"
>
    <div
        className="badge-addon badge-addon-lg bg-primary"
    >
        badge test
    </div>
</span>,
  "nodes": Array [
    <span
      className="badge badge-legend"
>
      <div
            className="badge-addon badge-addon-lg bg-primary"
      >
            badge test
      </div>
</span>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <Badge
        content="badge test"
        size="lg"
        theme="primary"
        type="legend"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Badge {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "content": "badge test",
          "size": "lg",
          "theme": "primary",
          "type": "legend",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <span
          className="badge badge-legend"
>
          <div
                    className="badge-addon badge-addon-lg bg-primary"
          >
                    badge test
          </div>
</span>,
        "_debugID": 2,
        "_renderedOutput": <span
          className="badge badge-legend"
>
          <div
                    className="badge-addon badge-addon-lg bg-primary"
          >
                    badge test
          </div>
</span>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Badge
    content="badge test"
    size="lg"
    theme="primary"
    type="legend"
/>,
}
`;
