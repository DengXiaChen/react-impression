// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Todo ui 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="alert"
>
    <div
        className="alert-dialog"
    >
        <div
            className="alert-addon"
        >
            <i
                className="fa fa-exclamation-circle text-danger"
            />
        </div>
        <div
            className="alert-body"
        >
            alert test
        </div>
        <div
            className="alert-footer"
            onClick={[Function]}
        >
            确认按钮
        </div>
    </div>
</div>,
  "nodes": Array [
    <div
      className="alert"
>
      <div
            className="alert-dialog"
      >
            <div
                  className="alert-addon"
            >
                  <i
                        className="fa fa-exclamation-circle text-danger"
                  />
            </div>
            <div
                  className="alert-body"
            >
                  alert test
            </div>
            <div
                  className="alert-footer"
                  onClick={[Function]}
            >
                  确认按钮
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <Alert
        btnText="确认按钮"
        onClick={[Function]}
        type="danger"
>
        alert test
</Alert>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Alert {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "btnText": "确认按钮",
          "children": "alert test",
          "onClick": [Function],
          "type": "danger",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="alert"
>
          <div
                    className="alert-dialog"
          >
                    <div
                              className="alert-addon"
                    >
                              <i
                                        className="fa fa-exclamation-circle text-danger"
                              />
                    </div>
                    <div
                              className="alert-body"
                    >
                              alert test
                    </div>
                    <div
                              className="alert-footer"
                              onClick={[Function]}
                    >
                              确认按钮
                    </div>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="alert"
>
          <div
                    className="alert-dialog"
          >
                    <div
                              className="alert-addon"
                    >
                              <i
                                        className="fa fa-exclamation-circle text-danger"
                              />
                    </div>
                    <div
                              className="alert-body"
                    >
                              alert test
                    </div>
                    <div
                              className="alert-footer"
                              onClick={[Function]}
                    >
                              确认按钮
                    </div>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Alert
    btnText="确认按钮"
    onClick={[Function]}
    type="danger"
>
    alert test
</Alert>,
}
`;
