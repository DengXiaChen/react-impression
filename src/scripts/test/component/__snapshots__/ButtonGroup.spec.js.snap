// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonGroup ui 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="btn-group btn-group-lg"
>
    <Button
        eventKey="left"
        onClick={[Function]}
        outline={true}
        theme="secondary"
    >
        Left
    </Button>
    <Button
        eventKey="middle"
        onClick={[Function]}
        outline={false}
        theme="secondary"
    >
        Middle
    </Button>
    <Button
        eventKey="right"
        onClick={[Function]}
        outline={true}
        theme="secondary"
    >
        Right
    </Button>
</div>,
  "nodes": Array [
    <div
      className="btn-group btn-group-lg"
>
      <Button
            eventKey="left"
            onClick={[Function]}
            outline={true}
            theme="secondary"
      >
            Left
      </Button>
      <Button
            eventKey="middle"
            onClick={[Function]}
            outline={false}
            theme="secondary"
      >
            Middle
      </Button>
      <Button
            eventKey="right"
            onClick={[Function]}
            outline={true}
            theme="secondary"
      >
            Right
      </Button>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <ButtonGroup
        activeKey="right"
        onSelect={[Function]}
        size="lg"
        theme="secondary"
>
        <Button
                eventKey="left"
                theme="primary"
        >
                Left
        </Button>
        <Button
                eventKey="middle"
                theme="primary"
        >
                Middle
        </Button>
        <Button
                eventKey="right"
                theme="primary"
        >
                Right
        </Button>
</ButtonGroup>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ButtonGroup {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "activeKey": "right",
          "children": Array [
            <Button
              eventKey="left"
              theme="primary"
>
              Left
</Button>,
            <Button
              eventKey="middle"
              theme="primary"
>
              Middle
</Button>,
            <Button
              eventKey="right"
              theme="primary"
>
              Right
</Button>,
          ],
          "onSelect": [Function],
          "size": "lg",
          "theme": "secondary",
        },
        "refs": Object {},
        "state": Object {
          "activeKey": "middle",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="btn-group btn-group-lg"
>
          <Button
                    eventKey="left"
                    onClick={[Function]}
                    outline={true}
                    theme="secondary"
          >
                    Left
          </Button>
          <Button
                    eventKey="middle"
                    onClick={[Function]}
                    outline={false}
                    theme="secondary"
          >
                    Middle
          </Button>
          <Button
                    eventKey="right"
                    onClick={[Function]}
                    outline={true}
                    theme="secondary"
          >
                    Right
          </Button>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="btn-group btn-group-lg"
>
          <Button
                    eventKey="left"
                    onClick={[Function]}
                    outline={true}
                    theme="secondary"
          >
                    Left
          </Button>
          <Button
                    eventKey="middle"
                    onClick={[Function]}
                    outline={false}
                    theme="secondary"
          >
                    Middle
          </Button>
          <Button
                    eventKey="right"
                    onClick={[Function]}
                    outline={true}
                    theme="secondary"
          >
                    Right
          </Button>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ButtonGroup
    activeKey="right"
    onSelect={[Function]}
    size="lg"
    theme="secondary"
>
    <Button
        eventKey="left"
        theme="primary"
    >
        Left
    </Button>
    <Button
        eventKey="middle"
        theme="primary"
    >
        Middle
    </Button>
    <Button
        eventKey="right"
        theme="primary"
    >
        Right
    </Button>
</ButtonGroup>,
}
`;
